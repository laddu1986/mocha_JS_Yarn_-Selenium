options:
  docker: true
pipelines:
  branches:
    ci:
      - step:
          name: Build and Push Web Test Image to DockerHub
          services:
            - docker
          caches:
            - docker
          script:
            #define custom date-time version
            - export VERSION="v$(date "+%y%m%d-%H%M%S")"
            - echo "VERSION - ${VERSION}"
            - export IMAGE_NAME="massiveinteractive/qa-web:$VERSION"
            - docker login -u $docker_user -p $docker_user_pwd
            #build and push image with above version
            - docker build --build-arg Version=$VERSION -t $IMAGE_NAME test/web
            - docker push $IMAGE_NAME
  tags:
    "v*":
      - step:
          name: Update Regression TestRun CronJob
          image:
            name: massiveinteractive/curator-k8s-cd:alpine-3.7-kubectl-1.9.0
            username: $docker_user
            password: $docker_user_pwd
          deployment: staging
          services:
            - docker
          caches:
            - docker
          script:
            - export KUBE_NAMESPACE="qa"
            #script from massiveinteractive/curator-k8s-cd configures cluster to accept our deployment
            - /scripts/configure-kubectl.sh https://appcurator.kube.axisnext.xyz $k8s_deployment_token $KUBE_NAMESPACE
            #script pulls the image from dockerhub with the specific tag defined in step 1
            - export IMAGE_NAME="massiveinteractive/qa-web:$BITBUCKET_TAG"
            #append BITBUCKET_TAG to jobName in job yaml file - this is to avoid "Err: Job already exists"
            #- sed -i "s/\$BITBUCKET_TAG/$BITBUCKET_TAG/" deployment/jobs/web-smoke-test-job.yaml
            #script applies the deployment by reading cronjob yaml file specs
            - /scripts/apply-deployment.sh deployment/jobs/web-smoke-test-job.yaml massiveinteractive/qa-ci $IMAGE_NAME
            - echo "web-smoke-test-${BITBUCKET_TAG} created in ${KUBE_NAMESPACE} namespace"
